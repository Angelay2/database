删除表中的数据
	语法：delete from [表的名称] where子句;
	如果不加上where子句, 表示删除整张表当中的数据; 但是不会对表结构造成影响; 如果有自增长的属性, 不会进行清空.
截断表:
	注意:
		不能针对某一行的数据进行操作, 而是针对整个表的数据进行操作的;
		充值auto_increment项
	语法: truncate table [表的名称]

聚合函数:
	COUNT函数:
		select COUNT(*) from exam_result; (统计总数)
	SUM函数:
		select sum(yingyu) from exam_result;(求某一项的和)
		select sum(shuxue) from exam_result where shuxue < 80;(求某一项小于80分的和)
	AVG函数:
		select avg(shuxue+yuwen+yingyu) from exam_result;
	MAX函数:
		select max(shuxue) from exam_result;

	MIN函数:
		select min(shuxue) from exam_result;

	
分组查询: group by 子句
	dept:  部门信息表, 存储的都是部门的信息(编号, 名称. 所在地点);
	emp: 员工表, 保存各个部门员工的信息
	salgrade: 工资表, 保存工资的等级信息
		查询下每个部门的平均工资和最高工资
		结果某个字段值进行筛选, 将同一种类的值, 归结到一起, 然后计算


	语法: group by




mysql的内置函数:
	1. 日期的函数
		a. 获取当前日期 current_date();	
		b. 获取当前时间 current_time();
		c. 获取当前时间戳 current_timestamp();

		d. date(datetime): 返回datetime当中的日期部分
		e. date_sub(date, interval[数值] [数值的单位]): 对日期进行减操作, 
			select date_sub('2020-08-11',interval 3 day); ---> 2020-08-08
		f. date_add(date, interval [数值] [数值的单位]) : 
 			select date_add('2020-08-11',interval 1 day);  -->2020-08-12

		g. datediff(date1, date2): 计算两个时间的差值, 单位是天, 结果为date1-date2;
			select datediff('2019-07-01', '2020-08-11');  --> -407
		h. now(): 返回当前的日期时间
	记录一条数据的插入时间, 我们尽量去使用timestamp这样的类型, 比较省事
	

字符串函数
	1. charset(str): 获取str的字符集
				select charset(ename) from emp;  查看字符集
	2. concat(str1, str2, str3,.....); 字符串连接
		select concat(name, '的语文成绩是', yuwen, ',数学成绩是', shuxue) as 同学成绩 from exam_result;
	3. instr(string, substring):; 返回substring在string当中的位置, 没有知道则返回0,
	4. ucase(str) 将str转换成大写
	5. lcase(str) 将str转换成小写
	6. left(strlen): 从str当中的左边开始取len个字符
		select left('abcdefg', 4); ---> abcd
	7. length(str): 计算str的长度, 并非是字节数量;
		select length('guivutcuvbj'); ---> 11
		strlen函数: 计算字符串的长度
		sizeof: 计算占用内存的大小 (关键字)
	8. replace(原字符串, 待替换字符串, 替换的字符串): 替换
	9. strcmp(str1, str2): 比较字符串, 
		根据校对规则的不同, 大小写敏感度的不同, 大小写的字符串比较的结果会不同
		eg: 'ABC'和'abc'就不同 --> 输出0
	10: subtring(str, pos, len): 从str的pos位置开始取len个字符
		select substring('abdcdiucsubc', 2, 3); ---> bdc
	以首字母小写的方式显示所有员工的姓名
		lcase: 转换小写
		substring(ename, 1, 1): 获取第一个字符
			拼接
		substring(ename, 2): 从第二个位置开始获取, 获取剩余字符串
	

数学函数:
	abs(num): 取绝对值函数	
	ceiling: 向上取整: 
	floor: 向下取整: 
	rand(): 获取随机数
	format(num, 要保存的小数位数)
		超过的部分会四舍五入
			select format(26.789999, 2); --> 26.79 
其他函数:
	user(): 获取当前用户
	database(): 获取当前正在使用的数据库
	md5(str): 计算MD5;
	password(用户名称): 查询用户


多表查询:
	显示部门号为10的部门名, 员工名和工资
		emp: 员工姓名, 工资, 部门编号
		dept: 部门编号, 部门名称, 所在地  

+--------+------------+----------+
| deptno | dname      | loc      |
+--------+------------+----------+
|     10 | ACCOUNTING | NEW YORK |
|     20 | RESEARCH   | DALLAS   |
|     30 | SALES      | CHICAGO  |
|     40 | OPERATIONS | BOSTON   |
+--------+------------+----------+

+--------+---------+
| ename  | sal     |
+--------+---------+
| SMITH  |  800.00 |
| ALLEN  | 1600.00 |
| WARD   | 1250.00 |
| JONES  | 2975.00 |
| MARTIN | 1250.00 |
| BLAKE  | 2850.00 |
| CLARK  | 2450.00 |
| SCOTT  | 3000.00 |
| KING   | 5000.00 |
| TURNER | 1500.00 |
| ADAMS  | 1100.00 |
| JAMES  |  950.00 |
| FORD   | 3000.00 |
| MILLER | 1300.00 |
+--------+---------+

	显示每个员工的姓名, 工资,及工资级别
		emp: 姓名, 工资
		salgrade: 	
自连接:
	指的就是在同一张表当中查询
	子查询:
	子查询其实就是嵌套查询, 在where语句中嵌套了一个查询		
	
