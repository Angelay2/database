表的约束:
	定义一个字段的时候: [字段名称 + 字段的类型], 表的约束是在约束插入数据的时候, 每一个字段的条件:
	1. 空属性: NULL(可以为NULL) & NOT NULL(不可以为NULL)
		表示当前字段值是否可以为NULL
	2. 默认值: 给定义默认属性字段插入数据的时候, 当我们没有插入数据的时候, mysql会自动加上定义的默认值.
	3. 列描述: 对字段的内容并没有约束, 而是相当于每一个字段的注释信息(log信息)
	4. zerofile: 约束了数据的宽度, 如果数据的宽度不够, 则用0进行填充
	5. 主键:
		5.1 主键并不是开辟了一个新的列, 而是给某一列设置了一个属性, 该属性约束该字段的内容不能为空, 不能为NULL
		5.2 一张表当中只能有一个主键
		5.3 主键可以唯一标识一行数据,
	6. 唯一键约束:
		6.1 关键字叫做unique, 也是给某个字段设置一个属性, 该属性约束字段的内容不能重复, 但是可以为NULL(key为UNI)
			create table t1(id int unique, name varchar(20));
			当插入相同id的数据时, 就不行,
		6.2 主键比唯一键多了一个约束字段内容不能为NULL, 但是一张表中可以用多个字段定义为unique.
	7. 外键:
		7.1 定义了主表和从表的关系
			主表一般存放的是基础属性的表, 例如班级属性, 学校, 用户属性(股票信息)
			从表存放的是具体业务的信息(用户买的股票的编号, 哪一个股票被买了)
		7.2 主表当中被其他从表认为是外键的字段, 必须是主键约束或者唯一键约束的字段(原因是因为数据不能重复)
		7.3 foreign key [从表的字段名称] references [主表字段名称]


表的增删查改:
	1. 替换:
		replace into [表的名称] [字段名称] values ([字段对应的值],[字段对应的值],...);
		注意:
			如果替换的数据不存在主键或者唯一键冲突, 表的数据没有冲突, 则插入一行数据
			如果表当中有冲突的数据, 则删除后再插入

	注意: 对于一些在插入数据的时候, 是整形插入, 但是在后期有可能需要进行计算(增删查改)的数据, 在定义字段的类型的时候, 尽量定义为浮点数(float,double,decimal); 比如两数之商也有可能为小数
	2. 查询:
		1. 全列查询
			select * from [表名称];
				"*": 当前表的所有列
			注意: 对于字段比较少的表并且插入数据比较少的表可以使用全列查询, 查询的效率不会受到太大的影响; 但是, 如果一个表当中字段比较多, 或者数据量比较大, 则全列查询会导致查询的效率降低
		2. 指定列查询:
			select [字段名称], [字段名称] from [表名称];
		3. 查询的时候, 表达式当中包含一个字段
			select [字段名称],[字段名称],[表达式(字段名称)]
from] 表名称		
		4. 去重
			关键字: distinct
			select distinct [字段名称], [字段名称] from [表名称];
		
	以上就是全列或者指定列数据查询, 前面的sql语句有一个特点, 查询当前表当中所有行的数据
	接下来, 在全列和指定列的基础上, 查询数据时候, 可以指定某个具体的行的数据, 或者具体满足某个条件的数据; 查询的时候, 可以加上约束条件, 来约束查询结果, 满足结果的数据才输出.
		where 条件: 对查询结果进行约束:
			where 子句: where[字段名称][运算符][比较的值]
				eg: where yingyu < 60
				or --> "||"   and --> "&&"
				between [x] and [y]
	如果想要约束的条件是多个值, 只需要满足一个, 就可以了; 那么可以选择or关键字或者in关键字
		in(val1, val2, val3,...);
	可以改名字同时计算表达式结果:
	select name, yuwen+shuxue+yingyu 总分 from exam_result where yuwen+shuxue+yingyu < 200

	匹配字符串的时候:
		模糊查询: 需要搭配like
		"_": 严格匹配任意的一个字符, eg: name = '孙_' 含义是查询名字为孙某的人
		"%": 可以匹配任意多个字符

	NULL查询:
		IS NOT: 不是xxx(where xxx is not NULL)
		=和<=>: 都是表示等于的运算符
			区别:
				在数据库查询的时候并不是安全的, 空和空使用"="进行比较的时候, 结果还是为NULL.
				<=>在数据库查询的时候是安全的, 空和空使用"="

	对查询结果进行排序:
		关键字: order by [字段名称]
		规则: 按照 order by 后面的字段的内容进行排序, 将结果输出
		默认的排序是升序(ASC), 如果想用降序进行排序, 则使用(DESC);
		返回的排序的顺序是未定义的, 所以在实际应用当中不要依赖排序结果


	筛选分页结果:
		方式1: limit n: 从0开始, 筛选n条结果
		方式2: limit s, n: 从s开始, 筛选n条结果
		方式3: limit n offset s: 从s开始, 筛选n条结果

update:
	更新表数据
	update [表名称] set [字段名称]=[更改后的值] where 约束条件;
	注意: 更改一行数据的时候, 一定要加上约束条件, 否则就全表更新了
	
